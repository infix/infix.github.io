{"version":3,"sources":["webpack:///./src/components/SwitchingTextComponent.tsx","webpack:///./src/pages/index.tsx"],"names":["randomElement","array","Math","floor","random","length","Wrapper","SwitchingTextComponent","duration","strings","useState","text","setText","theme","useTheme","useEffect","interval","setInterval","str","clearInterval","style","color","colors","textSubtitle","props","css","bg","IndexPage","primary","fg","ThemeSwitcher","to","Layout","title"],"mappings":"8KAKA,SAASA,EAAiBC,GACxB,OAAOA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWH,EAAMI,SAQhD,IAAMC,EAAe,mBAAH,mBAAG,CAAH,yHAELC,EAA0C,SAAC,GAA8B,QAA5BC,gBAA4B,MAAjB,EAAiB,EAAdC,EAAc,EAAdA,QAAc,EAC5DC,mBAASV,EAAcS,IAAxCE,EAD6E,KACvEC,EADuE,KAE5EC,EAAUC,cAAVD,MAYR,OAVAE,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAE3B,IAAMC,EAAMlB,EAAcS,GAC1BG,GAAQ,SAAAD,GAAI,OAAIO,GAAOP,EAAOX,EAAcS,GAAWS,OAC3C,IAAXV,GAEH,OAAO,kBAAMW,cAAcH,OAGrB,YAACV,EAAD,CAASc,MAAO,CAAEC,MAAOR,EAAMS,OAAOC,eAAtC,IAAwDZ,EAAxD,M,YCnBJF,EAAU,CACd,8BACA,8BACA,mBACA,oBACA,qEACA,sBACA,8CACA,sCACA,+BACA,6BACA,0CACA,uDACA,yGACA,oEAIIH,EAAe,mBAAH,oBAAG,CAAH,2CAGd,SAACkB,GAAD,OAAgBC,WAAhB,CAAC,cAAiCD,EAAMX,MAAMA,MAAMS,OAAOI,O,ycAGzDC,EAAY,WAAM,MACJb,cAAVD,MACsBS,OAAtBM,EAFc,EAEdA,QAASC,EAFK,EAELA,GACjB,OACE,YAAC,EAAD,KACE,YAACC,EAAA,EAAD,MAEA,0BACE,wBAAqBV,MAAO,CAAEC,MAAOQ,IACnC,0CACA,YAAC,EAAD,CAAwBpB,QAASA,EAASD,SAAU,MAGtD,0BACE,YAAC,OAAD,OAA2BY,MAAO,CAAEC,MAAOO,GACrCG,GAAG,YADT,UAEA,YAAC,OAAD,OAA2BX,MAAO,CAAEC,MAAOO,GACrCG,GAAG,YADT,cAUK,4BAAM,YAACC,EAAA,EAAD,CAAQC,MAAM,QAAO,YAAC,EAAD","file":"component---src-pages-index-tsx-300dc2161d58514fddb0.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { useTheme } from \"emotion-theming\"\nimport { AppTheme } from \"./Layout\"\nimport tw from \"twin.macro\"\n\nfunction randomElement<T>(array: readonly T[]): T {\n  return array[Math.floor(Math.random() * array.length)]\n}\n\ntype Props = {\n  readonly duration?: number,\n  readonly strings: string[]\n}\n\nconst Wrapper: any = tw.div`text-2xl mx-auto sm:max-w-full`\n\nexport const SwitchingTextComponent: React.FC<Props> = ({ duration = 5, strings }) => {\n  const [text, setText] = useState(randomElement(strings))\n  const { theme } = useTheme<AppTheme>()\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // reduce likelihood of duplicate elements\n      const str = randomElement(strings)\n      setText(text => str == text ? randomElement(strings) : str)\n    }, duration * 1000)\n\n    return () => clearInterval(interval)\n  })\n\n  return (<Wrapper style={{ color: theme.colors.textSubtitle }}> {text} </Wrapper>)\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { AppTheme, Layout } from \"../components/Layout\"\nimport { useTheme } from \"emotion-theming\"\nimport tw from \"twin.macro\"\nimport styled from \"@emotion/styled\"\nimport { SwitchingTextComponent } from \"../components/SwitchingTextComponent\"\nimport { css } from \"@emotion/core\"\nimport { ThemeSwitcher } from \"../components/ThemeSwitcher\"\n\n\nconst strings = [\n  \"And I'm a software engineer\",\n  \"And I'm a computer engineer\",\n  \"And I'm a person\",\n  \"And I'm a student\",\n  \"And I'm secretly 3 kids in a trench coat pretending to be an adult\",\n  \"And I'm sample text\",\n  \"And I'm a functional programming enthusiast\",\n  \"And I'm a wannabe compiler engineer\",\n  \"And I'm an avid manga reader\",\n  \"And I'm in love with NixOS\",\n  \"And I secretly think that OCaml is cool\",\n  \"And Amr is short for Adaptive Multi-Rate audio codec\",\n  \"And we don't support your browser for best viewing experience we recommend you use internet explorer 3\",\n  \"And that skills page took a depressing amount of time to make ðŸ˜­\",\n]\n\n\nconst Wrapper: any = styled.div`\n  ${tw`h-screen w-screen flex`}\n  \n  ${(props: any) => css`background: ${props.theme.theme.colors.bg}`}\n `\n\nconst IndexPage = () => {\n  const { theme } = useTheme<AppTheme>()\n  const { primary, fg } = theme.colors\n  return (\n    <Wrapper>\n      <ThemeSwitcher />\n\n      <div tw=\"flex flex-col m-auto\">\n        <h1 tw=\"text-center\" style={{ color: fg }}>\n          <span tw=\"block text-4xl mb-3\">Hi, I'm Amr</span>\n          <SwitchingTextComponent strings={strings} duration={10} />\n        </h1>\n\n        <div tw=\"mt-3 mx-auto text-center text-gray-100\">\n          <Link tw=\"block underline\" style={{ color: primary }}\n                to=\"/resume/\">Resume</Link>\n          <Link tw=\"block underline\" style={{ color: primary }}\n                to=\"/skills/\">Skills</Link>\n          {/*<Link tw=\"block underline\" style={{ color: primary }}*/}\n          {/*      to=\"/resume/\">Projects</Link>*/}\n        </div>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default () => <Layout title=\"home\"><IndexPage /></Layout>\n"],"sourceRoot":""}